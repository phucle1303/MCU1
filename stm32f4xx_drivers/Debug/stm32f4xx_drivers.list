
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000004b0  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000674  0800067c  0001067c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000674  08000674  0001067c  2**0
                  CONTENTS
  4 .ARM          00000000  08000674  08000674  0001067c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000674  0800067c  0001067c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000674  08000674  00010674  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000678  08000678  00010678  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001067c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  0800067c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  0800067c  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  0001067c  2**0
                  CONTENTS, READONLY
 12 .debug_info   000007a3  00000000  00000000  000106a6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000219  00000000  00000000  00010e49  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000a8  00000000  00000000  00011068  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000080  00000000  00000000  00011110  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  000012eb  00000000  00000000  00011190  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000a03  00000000  00000000  0001247b  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000050b3  00000000  00000000  00012e7e  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00017f31  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000001d4  00000000  00000000  00017fac  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	0800065c 	.word	0x0800065c

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	0800065c 	.word	0x0800065c

08000204 <delay>:
 */

#include "stm32f446xx.h"

void delay(void)
{
 8000204:	b480      	push	{r7}
 8000206:	b083      	sub	sp, #12
 8000208:	af00      	add	r7, sp, #0
	for (uint32_t i = 0; i<500000; i++);
 800020a:	2300      	movs	r3, #0
 800020c:	607b      	str	r3, [r7, #4]
 800020e:	e002      	b.n	8000216 <delay+0x12>
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	3301      	adds	r3, #1
 8000214:	607b      	str	r3, [r7, #4]
 8000216:	687b      	ldr	r3, [r7, #4]
 8000218:	4a03      	ldr	r2, [pc, #12]	; (8000228 <delay+0x24>)
 800021a:	4293      	cmp	r3, r2
 800021c:	d9f8      	bls.n	8000210 <delay+0xc>
}
 800021e:	bf00      	nop
 8000220:	370c      	adds	r7, #12
 8000222:	46bd      	mov	sp, r7
 8000224:	bc80      	pop	{r7}
 8000226:	4770      	bx	lr
 8000228:	0007a11f 	.word	0x0007a11f

0800022c <main>:

int main(void)
{
 800022c:	b580      	push	{r7, lr}
 800022e:	b084      	sub	sp, #16
 8000230:	af00      	add	r7, sp, #0
	GPIO_Handle_t GPIOLed;

	GPIOLed.pGPIOx = GPIOA;
 8000232:	4b0d      	ldr	r3, [pc, #52]	; (8000268 <main+0x3c>)
 8000234:	607b      	str	r3, [r7, #4]
	GPIOLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 8000236:	2305      	movs	r3, #5
 8000238:	723b      	strb	r3, [r7, #8]
	GPIOLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800023a:	2301      	movs	r3, #1
 800023c:	727b      	strb	r3, [r7, #9]
	GPIOLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800023e:	2302      	movs	r3, #2
 8000240:	72bb      	strb	r3, [r7, #10]
	GPIOLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000242:	2300      	movs	r3, #0
 8000244:	733b      	strb	r3, [r7, #12]
	GPIOLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000246:	2300      	movs	r3, #0
 8000248:	72fb      	strb	r3, [r7, #11]

	GPIO_PeriClockControl(GPIOA, ENABLE);
 800024a:	2101      	movs	r1, #1
 800024c:	4806      	ldr	r0, [pc, #24]	; (8000268 <main+0x3c>)
 800024e:	f000 f837 	bl	80002c0 <GPIO_PeriClockControl>

	GPIO_Init(&GPIOLed);
 8000252:	1d3b      	adds	r3, r7, #4
 8000254:	4618      	mov	r0, r3
 8000256:	f000 f903 	bl	8000460 <GPIO_Init>

	while(1)
	{
		GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_5);
 800025a:	2105      	movs	r1, #5
 800025c:	4802      	ldr	r0, [pc, #8]	; (8000268 <main+0x3c>)
 800025e:	f000 f9c5 	bl	80005ec <GPIO_ToggleOutputPin>
		delay();
 8000262:	f7ff ffcf 	bl	8000204 <delay>
		GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_5);
 8000266:	e7f8      	b.n	800025a <main+0x2e>
 8000268:	40020000 	.word	0x40020000

0800026c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800026c:	480d      	ldr	r0, [pc, #52]	; (80002a4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800026e:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000270:	480d      	ldr	r0, [pc, #52]	; (80002a8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000272:	490e      	ldr	r1, [pc, #56]	; (80002ac <LoopForever+0xa>)
  ldr r2, =_sidata
 8000274:	4a0e      	ldr	r2, [pc, #56]	; (80002b0 <LoopForever+0xe>)
  movs r3, #0
 8000276:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000278:	e002      	b.n	8000280 <LoopCopyDataInit>

0800027a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800027a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800027c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800027e:	3304      	adds	r3, #4

08000280 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000280:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000282:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000284:	d3f9      	bcc.n	800027a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000286:	4a0b      	ldr	r2, [pc, #44]	; (80002b4 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000288:	4c0b      	ldr	r4, [pc, #44]	; (80002b8 <LoopForever+0x16>)
  movs r3, #0
 800028a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800028c:	e001      	b.n	8000292 <LoopFillZerobss>

0800028e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800028e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000290:	3204      	adds	r2, #4

08000292 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000292:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000294:	d3fb      	bcc.n	800028e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000296:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 800029a:	f000 f9bb 	bl	8000614 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800029e:	f7ff ffc5 	bl	800022c <main>

080002a2 <LoopForever>:

LoopForever:
    b LoopForever
 80002a2:	e7fe      	b.n	80002a2 <LoopForever>
  ldr   r0, =_estack
 80002a4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002a8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002ac:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002b0:	0800067c 	.word	0x0800067c
  ldr r2, =_sbss
 80002b4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002b8:	2000001c 	.word	0x2000001c

080002bc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002bc:	e7fe      	b.n	80002bc <ADC_IRQHandler>
	...

080002c0 <GPIO_PeriClockControl>:
 *
 * @Note              -  none

 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80002c0:	b480      	push	{r7}
 80002c2:	b083      	sub	sp, #12
 80002c4:	af00      	add	r7, sp, #0
 80002c6:	6078      	str	r0, [r7, #4]
 80002c8:	460b      	mov	r3, r1
 80002ca:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80002cc:	78fb      	ldrb	r3, [r7, #3]
 80002ce:	2b01      	cmp	r3, #1
 80002d0:	d157      	bne.n	8000382 <GPIO_PeriClockControl+0xc2>
	{
		if(pGPIOx == GPIOA)
 80002d2:	687b      	ldr	r3, [r7, #4]
 80002d4:	4a59      	ldr	r2, [pc, #356]	; (800043c <GPIO_PeriClockControl+0x17c>)
 80002d6:	4293      	cmp	r3, r2
 80002d8:	d106      	bne.n	80002e8 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 80002da:	4b59      	ldr	r3, [pc, #356]	; (8000440 <GPIO_PeriClockControl+0x180>)
 80002dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002de:	4a58      	ldr	r2, [pc, #352]	; (8000440 <GPIO_PeriClockControl+0x180>)
 80002e0:	f043 0301 	orr.w	r3, r3, #1
 80002e4:	6313      	str	r3, [r2, #48]	; 0x30
		}else if (pGPIOx == GPIOH)
		{
			GPIOH_PCLK_DI();
		}
	}
}
 80002e6:	e0a3      	b.n	8000430 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOB)
 80002e8:	687b      	ldr	r3, [r7, #4]
 80002ea:	4a56      	ldr	r2, [pc, #344]	; (8000444 <GPIO_PeriClockControl+0x184>)
 80002ec:	4293      	cmp	r3, r2
 80002ee:	d106      	bne.n	80002fe <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80002f0:	4b53      	ldr	r3, [pc, #332]	; (8000440 <GPIO_PeriClockControl+0x180>)
 80002f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002f4:	4a52      	ldr	r2, [pc, #328]	; (8000440 <GPIO_PeriClockControl+0x180>)
 80002f6:	f043 0302 	orr.w	r3, r3, #2
 80002fa:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002fc:	e098      	b.n	8000430 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOC)
 80002fe:	687b      	ldr	r3, [r7, #4]
 8000300:	4a51      	ldr	r2, [pc, #324]	; (8000448 <GPIO_PeriClockControl+0x188>)
 8000302:	4293      	cmp	r3, r2
 8000304:	d106      	bne.n	8000314 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 8000306:	4b4e      	ldr	r3, [pc, #312]	; (8000440 <GPIO_PeriClockControl+0x180>)
 8000308:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800030a:	4a4d      	ldr	r2, [pc, #308]	; (8000440 <GPIO_PeriClockControl+0x180>)
 800030c:	f043 0304 	orr.w	r3, r3, #4
 8000310:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000312:	e08d      	b.n	8000430 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOD)
 8000314:	687b      	ldr	r3, [r7, #4]
 8000316:	4a4d      	ldr	r2, [pc, #308]	; (800044c <GPIO_PeriClockControl+0x18c>)
 8000318:	4293      	cmp	r3, r2
 800031a:	d106      	bne.n	800032a <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 800031c:	4b48      	ldr	r3, [pc, #288]	; (8000440 <GPIO_PeriClockControl+0x180>)
 800031e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000320:	4a47      	ldr	r2, [pc, #284]	; (8000440 <GPIO_PeriClockControl+0x180>)
 8000322:	f043 0308 	orr.w	r3, r3, #8
 8000326:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000328:	e082      	b.n	8000430 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOE)
 800032a:	687b      	ldr	r3, [r7, #4]
 800032c:	4a48      	ldr	r2, [pc, #288]	; (8000450 <GPIO_PeriClockControl+0x190>)
 800032e:	4293      	cmp	r3, r2
 8000330:	d106      	bne.n	8000340 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 8000332:	4b43      	ldr	r3, [pc, #268]	; (8000440 <GPIO_PeriClockControl+0x180>)
 8000334:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000336:	4a42      	ldr	r2, [pc, #264]	; (8000440 <GPIO_PeriClockControl+0x180>)
 8000338:	f043 0310 	orr.w	r3, r3, #16
 800033c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800033e:	e077      	b.n	8000430 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOF)
 8000340:	687b      	ldr	r3, [r7, #4]
 8000342:	4a44      	ldr	r2, [pc, #272]	; (8000454 <GPIO_PeriClockControl+0x194>)
 8000344:	4293      	cmp	r3, r2
 8000346:	d106      	bne.n	8000356 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000348:	4b3d      	ldr	r3, [pc, #244]	; (8000440 <GPIO_PeriClockControl+0x180>)
 800034a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800034c:	4a3c      	ldr	r2, [pc, #240]	; (8000440 <GPIO_PeriClockControl+0x180>)
 800034e:	f043 0320 	orr.w	r3, r3, #32
 8000352:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000354:	e06c      	b.n	8000430 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOG)
 8000356:	687b      	ldr	r3, [r7, #4]
 8000358:	4a3f      	ldr	r2, [pc, #252]	; (8000458 <GPIO_PeriClockControl+0x198>)
 800035a:	4293      	cmp	r3, r2
 800035c:	d106      	bne.n	800036c <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 800035e:	4b38      	ldr	r3, [pc, #224]	; (8000440 <GPIO_PeriClockControl+0x180>)
 8000360:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000362:	4a37      	ldr	r2, [pc, #220]	; (8000440 <GPIO_PeriClockControl+0x180>)
 8000364:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000368:	6313      	str	r3, [r2, #48]	; 0x30
}
 800036a:	e061      	b.n	8000430 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOH)
 800036c:	687b      	ldr	r3, [r7, #4]
 800036e:	4a3b      	ldr	r2, [pc, #236]	; (800045c <GPIO_PeriClockControl+0x19c>)
 8000370:	4293      	cmp	r3, r2
 8000372:	d15d      	bne.n	8000430 <GPIO_PeriClockControl+0x170>
			GPIOH_PCLK_EN();
 8000374:	4b32      	ldr	r3, [pc, #200]	; (8000440 <GPIO_PeriClockControl+0x180>)
 8000376:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000378:	4a31      	ldr	r2, [pc, #196]	; (8000440 <GPIO_PeriClockControl+0x180>)
 800037a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800037e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000380:	e056      	b.n	8000430 <GPIO_PeriClockControl+0x170>
		if(pGPIOx == GPIOA)
 8000382:	687b      	ldr	r3, [r7, #4]
 8000384:	4a2d      	ldr	r2, [pc, #180]	; (800043c <GPIO_PeriClockControl+0x17c>)
 8000386:	4293      	cmp	r3, r2
 8000388:	d106      	bne.n	8000398 <GPIO_PeriClockControl+0xd8>
			GPIOA_PCLK_DI();
 800038a:	4b2d      	ldr	r3, [pc, #180]	; (8000440 <GPIO_PeriClockControl+0x180>)
 800038c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800038e:	4a2c      	ldr	r2, [pc, #176]	; (8000440 <GPIO_PeriClockControl+0x180>)
 8000390:	f023 0301 	bic.w	r3, r3, #1
 8000394:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000396:	e04b      	b.n	8000430 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOB)
 8000398:	687b      	ldr	r3, [r7, #4]
 800039a:	4a2a      	ldr	r2, [pc, #168]	; (8000444 <GPIO_PeriClockControl+0x184>)
 800039c:	4293      	cmp	r3, r2
 800039e:	d106      	bne.n	80003ae <GPIO_PeriClockControl+0xee>
			GPIOB_PCLK_DI();
 80003a0:	4b27      	ldr	r3, [pc, #156]	; (8000440 <GPIO_PeriClockControl+0x180>)
 80003a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003a4:	4a26      	ldr	r2, [pc, #152]	; (8000440 <GPIO_PeriClockControl+0x180>)
 80003a6:	f023 0302 	bic.w	r3, r3, #2
 80003aa:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ac:	e040      	b.n	8000430 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOC)
 80003ae:	687b      	ldr	r3, [r7, #4]
 80003b0:	4a25      	ldr	r2, [pc, #148]	; (8000448 <GPIO_PeriClockControl+0x188>)
 80003b2:	4293      	cmp	r3, r2
 80003b4:	d106      	bne.n	80003c4 <GPIO_PeriClockControl+0x104>
			GPIOC_PCLK_DI();
 80003b6:	4b22      	ldr	r3, [pc, #136]	; (8000440 <GPIO_PeriClockControl+0x180>)
 80003b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ba:	4a21      	ldr	r2, [pc, #132]	; (8000440 <GPIO_PeriClockControl+0x180>)
 80003bc:	f023 0304 	bic.w	r3, r3, #4
 80003c0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003c2:	e035      	b.n	8000430 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOD)
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	4a21      	ldr	r2, [pc, #132]	; (800044c <GPIO_PeriClockControl+0x18c>)
 80003c8:	4293      	cmp	r3, r2
 80003ca:	d106      	bne.n	80003da <GPIO_PeriClockControl+0x11a>
			GPIOD_PCLK_DI();
 80003cc:	4b1c      	ldr	r3, [pc, #112]	; (8000440 <GPIO_PeriClockControl+0x180>)
 80003ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003d0:	4a1b      	ldr	r2, [pc, #108]	; (8000440 <GPIO_PeriClockControl+0x180>)
 80003d2:	f023 0308 	bic.w	r3, r3, #8
 80003d6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003d8:	e02a      	b.n	8000430 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOE)
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	4a1c      	ldr	r2, [pc, #112]	; (8000450 <GPIO_PeriClockControl+0x190>)
 80003de:	4293      	cmp	r3, r2
 80003e0:	d106      	bne.n	80003f0 <GPIO_PeriClockControl+0x130>
			GPIOE_PCLK_DI();
 80003e2:	4b17      	ldr	r3, [pc, #92]	; (8000440 <GPIO_PeriClockControl+0x180>)
 80003e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003e6:	4a16      	ldr	r2, [pc, #88]	; (8000440 <GPIO_PeriClockControl+0x180>)
 80003e8:	f023 0310 	bic.w	r3, r3, #16
 80003ec:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ee:	e01f      	b.n	8000430 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOF)
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	4a18      	ldr	r2, [pc, #96]	; (8000454 <GPIO_PeriClockControl+0x194>)
 80003f4:	4293      	cmp	r3, r2
 80003f6:	d106      	bne.n	8000406 <GPIO_PeriClockControl+0x146>
			GPIOF_PCLK_DI();
 80003f8:	4b11      	ldr	r3, [pc, #68]	; (8000440 <GPIO_PeriClockControl+0x180>)
 80003fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003fc:	4a10      	ldr	r2, [pc, #64]	; (8000440 <GPIO_PeriClockControl+0x180>)
 80003fe:	f023 0320 	bic.w	r3, r3, #32
 8000402:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000404:	e014      	b.n	8000430 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOG)
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	4a13      	ldr	r2, [pc, #76]	; (8000458 <GPIO_PeriClockControl+0x198>)
 800040a:	4293      	cmp	r3, r2
 800040c:	d106      	bne.n	800041c <GPIO_PeriClockControl+0x15c>
			GPIOG_PCLK_DI();
 800040e:	4b0c      	ldr	r3, [pc, #48]	; (8000440 <GPIO_PeriClockControl+0x180>)
 8000410:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000412:	4a0b      	ldr	r2, [pc, #44]	; (8000440 <GPIO_PeriClockControl+0x180>)
 8000414:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000418:	6313      	str	r3, [r2, #48]	; 0x30
}
 800041a:	e009      	b.n	8000430 <GPIO_PeriClockControl+0x170>
		}else if (pGPIOx == GPIOH)
 800041c:	687b      	ldr	r3, [r7, #4]
 800041e:	4a0f      	ldr	r2, [pc, #60]	; (800045c <GPIO_PeriClockControl+0x19c>)
 8000420:	4293      	cmp	r3, r2
 8000422:	d105      	bne.n	8000430 <GPIO_PeriClockControl+0x170>
			GPIOH_PCLK_DI();
 8000424:	4b06      	ldr	r3, [pc, #24]	; (8000440 <GPIO_PeriClockControl+0x180>)
 8000426:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000428:	4a05      	ldr	r2, [pc, #20]	; (8000440 <GPIO_PeriClockControl+0x180>)
 800042a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800042e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000430:	bf00      	nop
 8000432:	370c      	adds	r7, #12
 8000434:	46bd      	mov	sp, r7
 8000436:	bc80      	pop	{r7}
 8000438:	4770      	bx	lr
 800043a:	bf00      	nop
 800043c:	40020000 	.word	0x40020000
 8000440:	40023800 	.word	0x40023800
 8000444:	40020400 	.word	0x40020400
 8000448:	40020800 	.word	0x40020800
 800044c:	40020c00 	.word	0x40020c00
 8000450:	40021000 	.word	0x40021000
 8000454:	40021400 	.word	0x40021400
 8000458:	40021800 	.word	0x40021800
 800045c:	40021c00 	.word	0x40021c00

08000460 <GPIO_Init>:
 *
 * @Note              -

 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000460:	b480      	push	{r7}
 8000462:	b085      	sub	sp, #20
 8000464:	af00      	add	r7, sp, #0
 8000466:	6078      	str	r0, [r7, #4]
	uint32_t temp; //temp. register

	//1. configure the mode of GPIO pin

	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 8000468:	687b      	ldr	r3, [r7, #4]
 800046a:	795b      	ldrb	r3, [r3, #5]
 800046c:	2b03      	cmp	r3, #3
 800046e:	d81e      	bhi.n	80004ae <GPIO_Init+0x4e>
	{
		//the non-interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000470:	687b      	ldr	r3, [r7, #4]
 8000472:	795b      	ldrb	r3, [r3, #5]
 8000474:	461a      	mov	r2, r3
 8000476:	687b      	ldr	r3, [r7, #4]
 8000478:	791b      	ldrb	r3, [r3, #4]
 800047a:	005b      	lsls	r3, r3, #1
 800047c:	fa02 f303 	lsl.w	r3, r2, r3
 8000480:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 8000482:	687b      	ldr	r3, [r7, #4]
 8000484:	681b      	ldr	r3, [r3, #0]
 8000486:	681a      	ldr	r2, [r3, #0]
 8000488:	687b      	ldr	r3, [r7, #4]
 800048a:	791b      	ldrb	r3, [r3, #4]
 800048c:	4619      	mov	r1, r3
 800048e:	2303      	movs	r3, #3
 8000490:	408b      	lsls	r3, r1
 8000492:	43db      	mvns	r3, r3
 8000494:	4619      	mov	r1, r3
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	681b      	ldr	r3, [r3, #0]
 800049a:	400a      	ands	r2, r1
 800049c:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp; //setting
 800049e:	687b      	ldr	r3, [r7, #4]
 80004a0:	681b      	ldr	r3, [r3, #0]
 80004a2:	6819      	ldr	r1, [r3, #0]
 80004a4:	687b      	ldr	r3, [r7, #4]
 80004a6:	681b      	ldr	r3, [r3, #0]
 80004a8:	68fa      	ldr	r2, [r7, #12]
 80004aa:	430a      	orrs	r2, r1
 80004ac:	601a      	str	r2, [r3, #0]
	else
	{
		//
	}

	temp = 0;
 80004ae:	2300      	movs	r3, #0
 80004b0:	60fb      	str	r3, [r7, #12]

	//2. configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004b2:	687b      	ldr	r3, [r7, #4]
 80004b4:	799b      	ldrb	r3, [r3, #6]
 80004b6:	461a      	mov	r2, r3
 80004b8:	687b      	ldr	r3, [r7, #4]
 80004ba:	791b      	ldrb	r3, [r3, #4]
 80004bc:	005b      	lsls	r3, r3, #1
 80004be:	fa02 f303 	lsl.w	r3, r2, r3
 80004c2:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004c4:	687b      	ldr	r3, [r7, #4]
 80004c6:	681b      	ldr	r3, [r3, #0]
 80004c8:	689a      	ldr	r2, [r3, #8]
 80004ca:	687b      	ldr	r3, [r7, #4]
 80004cc:	791b      	ldrb	r3, [r3, #4]
 80004ce:	4619      	mov	r1, r3
 80004d0:	2303      	movs	r3, #3
 80004d2:	408b      	lsls	r3, r1
 80004d4:	43db      	mvns	r3, r3
 80004d6:	4619      	mov	r1, r3
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	681b      	ldr	r3, [r3, #0]
 80004dc:	400a      	ands	r2, r1
 80004de:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80004e0:	687b      	ldr	r3, [r7, #4]
 80004e2:	681b      	ldr	r3, [r3, #0]
 80004e4:	6899      	ldr	r1, [r3, #8]
 80004e6:	687b      	ldr	r3, [r7, #4]
 80004e8:	681b      	ldr	r3, [r3, #0]
 80004ea:	68fa      	ldr	r2, [r7, #12]
 80004ec:	430a      	orrs	r2, r1
 80004ee:	609a      	str	r2, [r3, #8]

	temp = 0;
 80004f0:	2300      	movs	r3, #0
 80004f2:	60fb      	str	r3, [r7, #12]

	//3. configure the pupd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004f4:	687b      	ldr	r3, [r7, #4]
 80004f6:	79db      	ldrb	r3, [r3, #7]
 80004f8:	461a      	mov	r2, r3
 80004fa:	687b      	ldr	r3, [r7, #4]
 80004fc:	791b      	ldrb	r3, [r3, #4]
 80004fe:	005b      	lsls	r3, r3, #1
 8000500:	fa02 f303 	lsl.w	r3, r2, r3
 8000504:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000506:	687b      	ldr	r3, [r7, #4]
 8000508:	681b      	ldr	r3, [r3, #0]
 800050a:	68da      	ldr	r2, [r3, #12]
 800050c:	687b      	ldr	r3, [r7, #4]
 800050e:	791b      	ldrb	r3, [r3, #4]
 8000510:	4619      	mov	r1, r3
 8000512:	2303      	movs	r3, #3
 8000514:	408b      	lsls	r3, r1
 8000516:	43db      	mvns	r3, r3
 8000518:	4619      	mov	r1, r3
 800051a:	687b      	ldr	r3, [r7, #4]
 800051c:	681b      	ldr	r3, [r3, #0]
 800051e:	400a      	ands	r2, r1
 8000520:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000522:	687b      	ldr	r3, [r7, #4]
 8000524:	681b      	ldr	r3, [r3, #0]
 8000526:	68d9      	ldr	r1, [r3, #12]
 8000528:	687b      	ldr	r3, [r7, #4]
 800052a:	681b      	ldr	r3, [r3, #0]
 800052c:	68fa      	ldr	r2, [r7, #12]
 800052e:	430a      	orrs	r2, r1
 8000530:	60da      	str	r2, [r3, #12]

	temp = 0;
 8000532:	2300      	movs	r3, #0
 8000534:	60fb      	str	r3, [r7, #12]

	//4. configure the optype
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000536:	687b      	ldr	r3, [r7, #4]
 8000538:	7a1b      	ldrb	r3, [r3, #8]
 800053a:	461a      	mov	r2, r3
 800053c:	687b      	ldr	r3, [r7, #4]
 800053e:	791b      	ldrb	r3, [r3, #4]
 8000540:	fa02 f303 	lsl.w	r3, r2, r3
 8000544:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000546:	687b      	ldr	r3, [r7, #4]
 8000548:	681b      	ldr	r3, [r3, #0]
 800054a:	685a      	ldr	r2, [r3, #4]
 800054c:	687b      	ldr	r3, [r7, #4]
 800054e:	791b      	ldrb	r3, [r3, #4]
 8000550:	4619      	mov	r1, r3
 8000552:	2301      	movs	r3, #1
 8000554:	408b      	lsls	r3, r1
 8000556:	43db      	mvns	r3, r3
 8000558:	4619      	mov	r1, r3
 800055a:	687b      	ldr	r3, [r7, #4]
 800055c:	681b      	ldr	r3, [r3, #0]
 800055e:	400a      	ands	r2, r1
 8000560:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000562:	687b      	ldr	r3, [r7, #4]
 8000564:	681b      	ldr	r3, [r3, #0]
 8000566:	6859      	ldr	r1, [r3, #4]
 8000568:	687b      	ldr	r3, [r7, #4]
 800056a:	681b      	ldr	r3, [r3, #0]
 800056c:	68fa      	ldr	r2, [r7, #12]
 800056e:	430a      	orrs	r2, r1
 8000570:	605a      	str	r2, [r3, #4]

	temp = 0;
 8000572:	2300      	movs	r3, #0
 8000574:	60fb      	str	r3, [r7, #12]

	//5. configure the alt functionality
	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 8000576:	687b      	ldr	r3, [r7, #4]
 8000578:	795b      	ldrb	r3, [r3, #5]
 800057a:	2b02      	cmp	r3, #2
 800057c:	d131      	bne.n	80005e2 <GPIO_Init+0x182>
	{
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 800057e:	687b      	ldr	r3, [r7, #4]
 8000580:	791b      	ldrb	r3, [r3, #4]
 8000582:	08db      	lsrs	r3, r3, #3
 8000584:	72fb      	strb	r3, [r7, #11]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 8000586:	687b      	ldr	r3, [r7, #4]
 8000588:	791b      	ldrb	r3, [r3, #4]
 800058a:	f003 0307 	and.w	r3, r3, #7
 800058e:	72bb      	strb	r3, [r7, #10]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2));
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	681b      	ldr	r3, [r3, #0]
 8000594:	7afa      	ldrb	r2, [r7, #11]
 8000596:	3208      	adds	r2, #8
 8000598:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800059c:	7abb      	ldrb	r3, [r7, #10]
 800059e:	009b      	lsls	r3, r3, #2
 80005a0:	220f      	movs	r2, #15
 80005a2:	fa02 f303 	lsl.w	r3, r2, r3
 80005a6:	43db      	mvns	r3, r3
 80005a8:	4618      	mov	r0, r3
 80005aa:	687b      	ldr	r3, [r7, #4]
 80005ac:	681b      	ldr	r3, [r3, #0]
 80005ae:	7afa      	ldrb	r2, [r7, #11]
 80005b0:	4001      	ands	r1, r0
 80005b2:	3208      	adds	r2, #8
 80005b4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));
 80005b8:	687b      	ldr	r3, [r7, #4]
 80005ba:	681b      	ldr	r3, [r3, #0]
 80005bc:	7afa      	ldrb	r2, [r7, #11]
 80005be:	3208      	adds	r2, #8
 80005c0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80005c4:	687b      	ldr	r3, [r7, #4]
 80005c6:	7a5b      	ldrb	r3, [r3, #9]
 80005c8:	461a      	mov	r2, r3
 80005ca:	7abb      	ldrb	r3, [r7, #10]
 80005cc:	009b      	lsls	r3, r3, #2
 80005ce:	fa02 f303 	lsl.w	r3, r2, r3
 80005d2:	4618      	mov	r0, r3
 80005d4:	687b      	ldr	r3, [r7, #4]
 80005d6:	681b      	ldr	r3, [r3, #0]
 80005d8:	7afa      	ldrb	r2, [r7, #11]
 80005da:	4301      	orrs	r1, r0
 80005dc:	3208      	adds	r2, #8
 80005de:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 80005e2:	bf00      	nop
 80005e4:	3714      	adds	r7, #20
 80005e6:	46bd      	mov	sp, r7
 80005e8:	bc80      	pop	{r7}
 80005ea:	4770      	bx	lr

080005ec <GPIO_ToggleOutputPin>:
 *
 * @Note              -

 */
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80005ec:	b480      	push	{r7}
 80005ee:	b083      	sub	sp, #12
 80005f0:	af00      	add	r7, sp, #0
 80005f2:	6078      	str	r0, [r7, #4]
 80005f4:	460b      	mov	r3, r1
 80005f6:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= ( 1<< PinNumber );
 80005f8:	687b      	ldr	r3, [r7, #4]
 80005fa:	695b      	ldr	r3, [r3, #20]
 80005fc:	78fa      	ldrb	r2, [r7, #3]
 80005fe:	2101      	movs	r1, #1
 8000600:	fa01 f202 	lsl.w	r2, r1, r2
 8000604:	405a      	eors	r2, r3
 8000606:	687b      	ldr	r3, [r7, #4]
 8000608:	615a      	str	r2, [r3, #20]
}
 800060a:	bf00      	nop
 800060c:	370c      	adds	r7, #12
 800060e:	46bd      	mov	sp, r7
 8000610:	bc80      	pop	{r7}
 8000612:	4770      	bx	lr

08000614 <__libc_init_array>:
 8000614:	b570      	push	{r4, r5, r6, lr}
 8000616:	4e0d      	ldr	r6, [pc, #52]	; (800064c <__libc_init_array+0x38>)
 8000618:	4c0d      	ldr	r4, [pc, #52]	; (8000650 <__libc_init_array+0x3c>)
 800061a:	1ba4      	subs	r4, r4, r6
 800061c:	10a4      	asrs	r4, r4, #2
 800061e:	2500      	movs	r5, #0
 8000620:	42a5      	cmp	r5, r4
 8000622:	d109      	bne.n	8000638 <__libc_init_array+0x24>
 8000624:	4e0b      	ldr	r6, [pc, #44]	; (8000654 <__libc_init_array+0x40>)
 8000626:	4c0c      	ldr	r4, [pc, #48]	; (8000658 <__libc_init_array+0x44>)
 8000628:	f000 f818 	bl	800065c <_init>
 800062c:	1ba4      	subs	r4, r4, r6
 800062e:	10a4      	asrs	r4, r4, #2
 8000630:	2500      	movs	r5, #0
 8000632:	42a5      	cmp	r5, r4
 8000634:	d105      	bne.n	8000642 <__libc_init_array+0x2e>
 8000636:	bd70      	pop	{r4, r5, r6, pc}
 8000638:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800063c:	4798      	blx	r3
 800063e:	3501      	adds	r5, #1
 8000640:	e7ee      	b.n	8000620 <__libc_init_array+0xc>
 8000642:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000646:	4798      	blx	r3
 8000648:	3501      	adds	r5, #1
 800064a:	e7f2      	b.n	8000632 <__libc_init_array+0x1e>
 800064c:	08000674 	.word	0x08000674
 8000650:	08000674 	.word	0x08000674
 8000654:	08000674 	.word	0x08000674
 8000658:	08000678 	.word	0x08000678

0800065c <_init>:
 800065c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800065e:	bf00      	nop
 8000660:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000662:	bc08      	pop	{r3}
 8000664:	469e      	mov	lr, r3
 8000666:	4770      	bx	lr

08000668 <_fini>:
 8000668:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800066a:	bf00      	nop
 800066c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800066e:	bc08      	pop	{r3}
 8000670:	469e      	mov	lr, r3
 8000672:	4770      	bx	lr
